name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      latest_tag: ${{ steps.set_latest_tag.outputs.latest_tag }}
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Tag version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          tag_prefix: v
      - name: Set latest tag output
        id: set_latest_tag
        run: |
          if [[ -z "${{ steps.tag_version.outputs.new_tag }}" ]]; then
            echo "latest_tag=${{ steps.tag_version.outputs.previous_tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "latest_tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"
          fi
  build:
    runs-on: ubuntu-latest
    needs:
      - tag
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    #   - name: Free Disk Space (Ubuntu)
    #     uses: jlumbroso/free-disk-space@main
    #     with:
    #       # this might remove tools that are actually needed,
    #       # if set to "true" but frees about 6 GB
    #       tool-cache: false

    #       # all of these default to true, but feel free to set to
    #       # "false" if necessary for your workflow
    #       android: true
    #       dotnet: true
    #       haskell: true
    #       large-packages: false
    #       docker-images: true
    #       swap-storage: true
      - name: Install musl cc
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools musl-dev musl
      - uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "./go.mod"
          cache: false
      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set lower case owner name
        run: |
            echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
            OWNER: '${{ github.repository_owner }}'
      - run: git config --global url.https://$GITHUB_TOKEN@github.com/${{ env.OWNER_LC }}.insteadOf https://github.com/${{ env.OWNER_LC }}
      - name: Build service
        id: build_service
        run: |
            CC=/usr/bin/musl-gcc GOOS=linux GOARCH=amd64 go build -v -ldflags "-linkmode external -extldflags '-static' -s -w" -tags musl -o ./build/ .;
            chmod +x ./build/*
      - name: Pack build
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          tar -czvf build.tar.gz build
      - name: Upload artifact
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.tar.gz
          retention-days: 1
  deploy-health-check-service:
    runs-on: ubuntu-latest
    needs:
        - tag
        - build
    permissions:
        id-token: write
        contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
            name: build
            path: .
      - name: Unpack artifact
        run: |
            tar -xvf build.tar.gz
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set lower case repository name
        run: |
            echo "REPOSITORY_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
            OWNER: '${{ github.repository }}'

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
            push: true
            tags: |
                ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.tag.outputs.latest_tag }}-${{ github.event.inputs.deployTo == '' && 'dev' || github.event.inputs.deployTo }}
            file: ./Dockerfile
            context: .